{"ast":null,"code":"var _jsxFileName = \"/home/simplexmed/Documents/doctor patient app/doctor_patient/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    if (credentials.username === \"doctor\" && credentials.password === \"doctor\") {\n      var _localStorage;\n      (_localStorage = localStorage) === null || _localStorage === void 0 ? void 0 : _localStorage.setItem('authentic', 'yes');\n      navigate(\"/doctor\");\n    } else {\n      alert(\"Invalid credentials!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-4 bg-gradient-to-r from-indigo-500 from-10% via-sky-500 via-30% to-violet-400 to-90%\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"max-w-md mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Doctor Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"border rounded w-full p-2\",\n          onChange: e => setCredentials({\n            ...credentials,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"border rounded w-full p-2\",\n          onChange: e => setCredentials({\n            ...credentials,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white py-2 px-4 rounded mt-4\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"z3ITMlmvJ6lppiO6dkFiAxF6G5k=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","credentials","setCredentials","username","password","navigate","handleLogin","e","preventDefault","_localStorage","localStorage","setItem","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","_c","$RefreshReg$"],"sources":["/home/simplexmed/Documents/doctor patient app/doctor_patient/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Login = () => {\n    const [credentials, setCredentials] = useState({ username: \"\", password: \"\" });\n    const navigate = useNavigate();\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        if (credentials.username === \"doctor\" && credentials.password === \"doctor\") {\n            localStorage?.setItem('authentic', 'yes')\n            navigate(\"/doctor\");\n        } else {\n            alert(\"Invalid credentials!\");\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen p-4 bg-gradient-to-r from-indigo-500 from-10% via-sky-500 via-30% to-violet-400 to-90%\">\n            <form onSubmit={handleLogin} className=\"max-w-md mx-auto\">\n                <h2 className=\"text-xl font-bold mb-4\">Doctor Login</h2>\n                <div>\n                    <label className=\"block\">Username</label>\n                    <input\n                        type=\"text\"\n                        className=\"border rounded w-full p-2\"\n                        onChange={(e) => setCredentials({ ...credentials, username: e.target.value })}\n                    />\n                </div>\n                <div>\n                    <label className=\"block\">Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"border rounded w-full p-2\"\n                        onChange={(e) => setCredentials({ ...credentials, password: e.target.value })}\n                    />\n                </div>\n                <button type=\"submit\" className=\"bg-blue-500 text-white py-2 px-4 rounded mt-4\">\n                    Login\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIP,WAAW,CAACE,QAAQ,KAAK,QAAQ,IAAIF,WAAW,CAACG,QAAQ,KAAK,QAAQ,EAAE;MAAA,IAAAK,aAAA;MACxE,CAAAA,aAAA,GAAAC,YAAY,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC;MACzCN,QAAQ,CAAC,SAAS,CAAC;IACvB,CAAC,MAAM;MACHO,KAAK,CAAC,sBAAsB,CAAC;IACjC;EACJ,CAAC;EAED,oBACId,OAAA;IAAKe,SAAS,EAAC,qGAAqG;IAAAC,QAAA,eAChHhB,OAAA;MAAMiB,QAAQ,EAAET,WAAY;MAACO,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACrDhB,OAAA;QAAIe,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDrB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAOe,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzCrB,OAAA;UACIsB,IAAI,EAAC,MAAM;UACXP,SAAS,EAAC,2BAA2B;UACrCQ,QAAQ,EAAGd,CAAC,IAAKL,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEE,QAAQ,EAAEI,CAAC,CAACe,MAAM,CAACC;UAAM,CAAC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNrB,OAAA;QAAAgB,QAAA,gBACIhB,OAAA;UAAOe,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzCrB,OAAA;UACIsB,IAAI,EAAC,UAAU;UACfP,SAAS,EAAC,2BAA2B;UACrCQ,QAAQ,EAAGd,CAAC,IAAKL,cAAc,CAAC;YAAE,GAAGD,WAAW;YAAEG,QAAQ,EAAEG,CAAC,CAACe,MAAM,CAACC;UAAM,CAAC;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNrB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,+CAA+C;QAAAC,QAAA,EAAC;MAEhF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACnB,EAAA,CAxCID,KAAK;EAAA,QAEUH,WAAW;AAAA;AAAA4B,EAAA,GAF1BzB,KAAK;AA0CX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}